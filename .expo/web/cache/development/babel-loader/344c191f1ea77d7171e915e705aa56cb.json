{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport HeaderText from \"../components/HeaderText\";\nimport { useDispatch } from 'react-redux';\nimport { userSlice } from \"../redux/slice/userSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      onChangeUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      onChangePassword = _React$useState4[1];\n\n  var dispatch = useDispatch();\n\n  var handleSignInClick = function handleSignInClick() {\n    dispatch(userSlice.actions.login({\n      userId: 99,\n      userName: username,\n      isLogin: true\n    }));\n  };\n\n  var handleTestClick = function handleTestClick() {\n    Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }]);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.centerContainer,\n      children: _jsx(HeaderText, {\n        titleName: \"Qu\\u1EA3n l\\xFD thu chi\"\n      })\n    }), _jsxs(View, {\n      style: styles.leftContainer,\n      children: [_jsx(Text, {\n        style: styles.textButton,\n        children: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: onChangeUsername,\n        value: username,\n        placeholder: \"Nh\\u1EADp s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: onChangePassword,\n        value: password,\n        placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.rightContainer,\n      children: _jsx(Text, {\n        style: styles.textButton,\n        children: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u\"\n      })\n    }), _jsx(View, {\n      style: styles.leftContainer,\n      children: _jsx(Button, {\n        style: styles.button,\n        title: \"\\u0110\\u0103ng nh\\u1EADp\",\n        onPress: handleSignInClick\n      })\n    }), _jsxs(View, {\n      style: styles.centerContainer,\n      children: [_jsx(Text, {\n        style: styles.textButton,\n        children: \"Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n ?\"\n      }), _jsx(Text, {\n        style: styles.textButton,\n        onPress: handleTestClick,\n        children: \"Phi\\xEAn b\\u1EA3n 1.01\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    padding: 12,\n    backgroundColor: '#6BA9E2'\n  },\n  leftContainer: {\n    borderWidth: 2,\n    borderColor: 'green',\n    marginBottom: 10\n  },\n  rightContainer: {\n    alignItems: 'flex-end',\n    borderWidth: 2,\n    borderColor: 'green',\n    marginBottom: 10\n  },\n  centerContainer: {\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: 'green',\n    marginBottom: 10\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  input: {\n    height: 40,\n    marginBottom: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderTopWidth: 0,\n    borderRightWidth: 0,\n    borderLeftWidth: 0\n  },\n  textButton: {\n    color: 'blue'\n  },\n  button: {\n    textAlign: 'center',\n    marginVertical: 8\n  }\n});","map":{"version":3,"sources":["D:/Download/Desktop/BK/File/mobile/App/SPM/RN_App/src/screens/SignInScreen.js"],"names":["React","HeaderText","useDispatch","userSlice","SignInScreen","useState","username","onChangeUsername","password","onChangePassword","dispatch","handleSignInClick","actions","login","userId","userName","isLogin","handleTestClick","Alert","alert","text","onPress","console","log","style","styles","container","centerContainer","leftContainer","textButton","input","rightContainer","button","StyleSheet","create","justifyContent","padding","backgroundColor","borderWidth","borderColor","marginBottom","alignItems","tinyLogo","width","height","borderTopWidth","borderRightWidth","borderLeftWidth","color","textAlign","marginVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, StyleSheet, Image, TextInput, Button, Alert } from 'react-native';\r\nimport HeaderText from '../components/HeaderText';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userSlice } from '../redux/slice/userSlice';\r\n\r\nexport default function SignInScreen() {\r\n  const [username, onChangeUsername] = React.useState('');\r\n  const [password, onChangePassword] = React.useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSignInClick = () => {\r\n    dispatch(userSlice.actions.login({\r\n      userId: 99,\r\n      userName: username,\r\n      isLogin: true\r\n    }));\r\n  }\r\n\r\n  const handleTestClick = () => {\r\n    Alert.alert(\r\n      \"Alert Title\",\r\n      \"My Alert Msg\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Cancel Pressed\"),\r\n          style: \"cancel\"\r\n        },\r\n        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n      ]\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.centerContainer}>\r\n        <HeaderText titleName=\"Quản lý thu chi\"/>\r\n      </View>\r\n      <View style={styles.leftContainer}>\r\n        <Text style={styles.textButton}>Số điện thoại</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={onChangeUsername}\r\n          value={username}\r\n          placeholder=\"Nhập số điện thoại\"\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={onChangePassword}\r\n          value={password}\r\n          placeholder=\"Nhập mật khẩu\"\r\n          secureTextEntry={true}\r\n        />\r\n      </View>\r\n      <View style={styles.rightContainer}>\r\n        <Text style={styles.textButton}>Quên mật khẩu</Text>\r\n      </View>\r\n      <View style={styles.leftContainer}>\r\n        <Button style={styles.button} title=\"Đăng nhập\" onPress={handleSignInClick} />\r\n      </View>\r\n      <View style={styles.centerContainer}>\r\n        <Text style={styles.textButton}>Chưa có tài khoản ?</Text>\r\n        <Text style={styles.textButton} onPress={handleTestClick}>Phiên bản 1.01</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    padding: 12,\r\n    backgroundColor: '#6BA9E2',\r\n  },\r\n  leftContainer: {\r\n    borderWidth: 2,\r\n    borderColor: 'green',\r\n    marginBottom: 10,\r\n  },\r\n  rightContainer: {\r\n    alignItems: 'flex-end',\r\n    borderWidth: 2,\r\n    borderColor: 'green',\r\n    marginBottom: 10,\r\n  },\r\n  centerContainer: {\r\n    alignItems: 'center',\r\n    borderWidth: 2,\r\n    borderColor: 'green',\r\n    marginBottom: 10,\r\n  },\r\n  tinyLogo: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    marginBottom: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    borderTopWidth: 0,\r\n    borderRightWidth: 0,\r\n    borderLeftWidth: 0,\r\n  },\r\n  textButton: {\r\n    color: 'blue',\r\n  },\r\n  button: {\r\n    textAlign: 'center',\r\n    marginVertical: 8,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
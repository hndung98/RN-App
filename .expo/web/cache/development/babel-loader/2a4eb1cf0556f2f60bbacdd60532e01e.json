{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userInfoSelector } from \"../redux/selectors\";\nimport { userSlice } from \"../redux/slice/userSlice\";\nimport { db } from \"../../firebase-config\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SettingsScreen = function SettingsScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setIsLogin = _useState2[1];\n\n  var userInfo = useSelector(userInfoSelector);\n  var dispatch = useDispatch();\n\n  var handleSignInClick = function handleSignInClick() {\n    dispatch(userSlice.actions.login({\n      userId: 0,\n      userName: '',\n      isLogin: false\n    }));\n  };\n\n  var handleClick = function handleClick() {\n    set(ref(db, 'Users/' + userInfo.userId), {\n      username: userInfo.userName,\n      email: 'abc@gmail.com'\n    }).then(function () {\n      alert('Data saved successfully!');\n    }).catch(function (error) {\n      alert('The write failed...');\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      onPress: handleSignInClick,\n      children: \"Settings Page\"\n    }), _jsxs(Text, {\n      children: [\"user id: \", userInfo.userId]\n    }), _jsxs(Text, {\n      children: [\"user name: \", userInfo.userName]\n    }), _jsxs(Text, {\n      children: [\"login status: \", userInfo.isLogin === true ? 'true' : 'false']\n    }), _jsx(Button, {\n      style: styles.button,\n      title: \"Write Data\",\n      onPress: handleClick\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  highlight: {\n    fontWeight: '700'\n  },\n  button: {\n    textAlign: 'center',\n    marginVertical: 8\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["D:/Download/Desktop/BK/mobile/App/SPM/RN_App/src/screens/SettingsScreen.js"],"names":["React","useState","useDispatch","useSelector","userInfoSelector","userSlice","db","getDatabase","ref","set","SettingsScreen","isLogin","setIsLogin","userInfo","dispatch","handleSignInClick","actions","login","userId","userName","handleClick","username","email","then","alert","catch","error","styles","button","StyleSheet","create","highlight","fontWeight","textAlign","marginVertical"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT;AACA,SAASC,SAAT;AAEA,SAASC,EAAT;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAuC,mBAAvC;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,kBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,QAAQ,GAAGV,WAAW,CAACC,gBAAD,CAA5B;AAEA,MAAMU,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,MAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,QAAQ,CAACT,SAAS,CAACW,OAAV,CAAkBC,KAAlB,CAAwB;AAC/BC,MAAAA,MAAM,EAAE,CADuB;AAE/BC,MAAAA,QAAQ,EAAE,EAFqB;AAG/BR,MAAAA,OAAO,EAAE;AAHsB,KAAxB,CAAD,CAAR;AAKD,GAND;;AAQA,MAAMS,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBX,IAAAA,GAAG,CAACD,GAAG,CAACF,EAAD,EAAK,WAAWO,QAAQ,CAACK,MAAzB,CAAJ,EAAsC;AACvCG,MAAAA,QAAQ,EAAER,QAAQ,CAACM,QADoB;AAEvCG,MAAAA,KAAK,EAAE;AAFgC,KAAtC,CAAH,CAICC,IAJD,CAIM,YAAM;AACVC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KAND,EAOCC,KAPD,CAOO,UAACC,KAAD,EAAW;AAChBF,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KATD;AAUD,GAXD;;AAaA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,OAAO,EAAET,iBAAf;AAAA;AAAA,MADJ,EAEI,MAAC,IAAD;AAAA,8BAAgBF,QAAQ,CAACK,MAAzB;AAAA,MAFJ,EAGI,MAAC,IAAD;AAAA,gCAAkBL,QAAQ,CAACM,QAA3B;AAAA,MAHJ,EAII,MAAC,IAAD;AAAA,mCAAqBN,QAAQ,CAACF,OAAT,KAAqB,IAArB,GAA4B,MAA5B,GAAqC,OAA1D;AAAA,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAEgB,MAAM,CAACC,MAAtB;AAA8B,MAAA,KAAK,EAAC,YAApC;AAAiD,MAAA,OAAO,EAAER;AAA1D,MALJ;AAAA,IADJ;AASD,CArCD;;AAwCA,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GADkB;AAI7BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,SAAS,EAAE,QADL;AAENC,IAAAA,cAAc,EAAE;AAFV;AAJqB,CAAlB,CAAf;AAUE,eAAexB,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button\r\n} from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userInfoSelector } from '../redux/selectors';\r\nimport { userSlice } from '../redux/slice/userSlice';\r\n\r\nimport { db } from '../../firebase-config'\r\nimport { getDatabase, ref, set  } from \"firebase/database\";\r\n\r\nconst SettingsScreen = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const userInfo = useSelector(userInfoSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSignInClick = () => {\r\n    dispatch(userSlice.actions.login({\r\n      userId: 0,\r\n      userName: '',\r\n      isLogin: false\r\n    }));\r\n  }\r\n\r\n  const handleClick = () => {\r\n    set(ref(db, 'Users/' + userInfo.userId), {\r\n      username: userInfo.userName,\r\n      email: 'abc@gmail.com'\r\n    })\r\n    .then(() => {\r\n      alert('Data saved successfully!');\r\n    })\r\n    .catch((error) => {\r\n      alert('The write failed...');\r\n    });\r\n  }\r\n\r\n  return (\r\n      <View>\r\n          <Text onPress={handleSignInClick}>Settings Page</Text>\r\n          <Text>user id: {userInfo.userId}</Text>\r\n          <Text>user name: {userInfo.userName}</Text>\r\n          <Text>login status: {userInfo.isLogin === true ? 'true' : 'false'}</Text>\r\n          <Button style={styles.button} title=\"Write Data\" onPress={handleClick} />\r\n      </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    highlight: {\r\n      fontWeight: '700',\r\n    },\r\n    button: {\r\n      textAlign: 'center',\r\n      marginVertical: 8,\r\n    },\r\n  });\r\n\r\n  export default SettingsScreen"]},"metadata":{},"sourceType":"module"}